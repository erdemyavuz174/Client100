<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>F</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <deactivation_condition>ANY_OK</deactivation_condition>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_FILESYSTEM.PRV.JOB.MOVE@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <rollback_enabled>1</rollback_enabled>
         <versioning_id>648305654</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INCLUDE PCK.AUTOMIC_FILESYSTEM.PRV.INCLUDE.ATTACH
:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY

:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION

:SET &UC4RB_PV_ERRORS# = 0
:SET &UC4RB_LOGGING_PARAMETER# = "Source directory/file name"
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_DIR_FILE_MV_SOURCE#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_PARAM_VALIDITY &INPUT_PARAM# = &UC4RB_DIR_FILE_MV_SOURCE#

:SET &UC4RB_LOGGING_PARAMETER# = "Target directory/file name"
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_DIR_FILE_MV_TARGET#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_PARAM_VALIDITY &INPUT_PARAM# = &UC4RB_DIR_FILE_MV_TARGET#

! -----------------------------------------------------------
:SET &UC4RB_LOGGING_PARAMETER# = "Source files/directories name(Regex supported)"
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_ARCHIVE_WILDCARDS#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_PARAM_VALIDITY &INPUT_PARAM# = &UC4RB_ARCHIVE_WILDCARDS#
! -----------------------------------------------------------

:SET &UC4RB_LOGGING_PARAMETER# = "Overwrite existing"
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_DIR_FILE_MV_OVERWRITE#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_PARAM_VALIDITY &INPUT_PARAM# = &UC4RB_DIR_FILE_MV_OVERWRITE#

:SET &UC4RB_CONVERTED_STRING# = &UC4RB_DIR_FILE_MV_SOURCE#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CONVERT_SLASHES_WINDOWS_STYLE
:SET &UC4RB_DIR_FILE_MV_SOURCE# = &UC4RB_CONVERTED_STRING#

:SET &UC4RB_CONVERTED_STRING# = &UC4RB_DIR_FILE_MV_TARGET#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CONVERT_SLASHES_WINDOWS_STYLE
:SET &UC4RB_DIR_FILE_MV_TARGET# = &UC4RB_CONVERTED_STRING#

! Check EXT: in value
:IF &UC4RB_PV_ERRORS# = 100
  __uc_return( 100 )
:ENDIF

:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION

:SET &UC4RB_ESCAPED_STRING# = &UC4RB_DIR_FILE_MV_SOURCE#
:INC PCK.AUTOMIC_FILESYSTEM.PUB.INCLUDE.ESCAPE_CHARS@WINDOWS
:SET &UC4RB_DIR_FILE_MV_SOURCE# = &UC4RB_ESCAPED_STRING#



! ----checking soruce dir/file exist or not
:SET &UC4RB_CHECKME# = &UC4RB_DIR_FILE_MV_SOURCE#
:INCLUDE PCK.AUTOMIC_FILESYSTEM.PRV.INCLUDE.CHECK_TYPE@WINDOWS

$EXISTSOURCE=$EXIST
$ISSOURCEFILE=$ISFILE
$errors = 0
if  ($EXISTSOURCE -eq 0) {
:SET &UC4RB_LOGGING_PARAMETER# = "Source directory/file name"
:SET &UC4RB_LOGGING_ERROR# = "Source directory/file name '&UC4RB_DIR_FILE_MV_SOURCE#' doesn't exist."
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR
   $errors = 1
}

if ( $errors -gt 0 ) {
  __uc_return( $errors )
}

:SET &UC4RB_ESCAPED_STRING# = &UC4RB_DIR_FILE_MV_TARGET#
:INC PCK.AUTOMIC_FILESYSTEM.PUB.INCLUDE.ESCAPE_CHARS@WINDOWS
:SET &UC4RB_DIR_FILE_MV_TARGET# = &UC4RB_ESCAPED_STRING#

! ----checking target dir/file exist or not
:SET &UC4RB_CHECKME# = &UC4RB_DIR_FILE_MV_TARGET#
:INCLUDE PCK.AUTOMIC_FILESYSTEM.PRV.INCLUDE.CHECK_TYPE@WINDOWS

$EXISTTARGET=$EXIST
! ------------------------------------------------------



:SET &UC4RB_LOGGING_INFO# = "Move file '&UC4RB_DIR_FILE_MV_SOURCE#' to '&UC4RB_DIR_FILE_MV_TARGET#' with overwrite "
:SET &UC4RB_LOGGING_INFO# = STR_CAT(&UC4RB_LOGGING_INFO#, "flag is '&UC4RB_DIR_FILE_MV_OVERWRITE#'")
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO

:SET &UC4RB_ESCAPED_STRING# = &UC4RB_DIR_FILE_MV_SOURCE#
:SET &UC4RB_DIR_FILE_MV_SOURCE# = &UC4RB_ESCAPED_STRING#

! --------start check if wildcard is specified in input----
:SET &HAS_WILDCARDS# = "N"
:SET &WILDCARD_FILE# = ""

:IF STR_LENGTH(&UC4RB_ARCHIVE_WILDCARDS#)> 0
:  SET &HAS_WILDCARDS# = "Y"
! ------------------------------------------------------------
:  DEFINE &WILDCARD_ARR#, string, 20
:  FILL &WILDCARD_ARR#[] = STR_SPLIT(&UC4RB_ARCHIVE_WILDCARDS#, ",")
:  SET &WILDCARD_ARR_LEN# = LENGTH(&WILDCARD_ARR#[], SIZE)
:  SET &INDX# = 1
:  WHILE &INDX# LE &WILDCARD_ARR_LEN#
:    SET &INDX# = FORMAT(&INDX#, "0")
:    SET &FL_PTTR# = STR_TRIM(&WILDCARD_ARR#[&INDX#])
:    IF STR_LENGTH(&FL_PTTR#)> 0
:      SET &WILDCARD_FILE# = STR_CAT(&WILDCARD_FILE#, "'&FL_PTTR#'")
:      SET &INDX# = &INDX#+ 1
:      IF &INDX# <= &WILDCARD_ARR_LEN#
:        SET &WILDCARD_FILE# = STR_CAT(&WILDCARD_FILE#, ",")
:      ENDIF
:    ENDIF
:  ENDWHILE
! ------------------------------------------------------------

:ENDIF
! --------End check if wildcard is specified in input----

! -------start move file---------------

$sourceFile = '&UC4RB_DIR_FILE_MV_SOURCE#'
$destinationFile = '&UC4RB_DIR_FILE_MV_TARGET#'
$overwriteFlag = '&UC4RB_DIR_FILE_MV_OVERWRITE#'

function moveFiles($source) {
    Write-Host "Moving $source"
    if($overwriteFlag -ieq 'YES'){
              Get-ChildItem "$destinationFile"  | Foreach-Object {
                  $DestFileSubstr = $_.Fullname.SubString($destinationFile.Length+1)
                  if($srcFile -eq $DestFileSubstr){
                       Remove-Item "$destinationFile\$srcFile" -Recurse -Confirm:$false -force
:                      INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
                  }
              }
      }
       Move-Item -Path "$source" -Destination "$destinationFile"

: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
}



if($ISSOURCEFILE -eq 1){
    Write-Host "Moving $sourceFile"
    if($overwriteFlag -ieq 'YES'){
        Move-Item -Path "$sourceFile" -Destination "$destinationFile" -Force

     } elseif($overwriteFlag -ieq 'NO'){
        Move-item -Path "$sourceFile" -Destination "$destinationFile"
     }

} else {
   if($EXISTTARGET -eq 0 ) {
         Write-Host "Moving $destinationFile"
		 if("&HAS_WILDCARDS#" -eq "Y"){
:SET &UC4RB_LOGGING_INFO# = "WildCard not supported when target path does not exits "
:SET &UC4RB_LOGGING_INFO# = STR_CAT(&UC4RB_LOGGING_INFO#, "flag is '&UC4RB_DIR_FILE_MV_OVERWRITE#'")
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
			__uc_return( 1 )
		 }
         Move-Item -Path $sourceFile -Destination $destinationFile
    } else {
          if("&HAS_WILDCARDS#" -eq "N"){
             $temPath = $sourceFile
             $srcFile = Split-Path $temPath -leaf
             moveFiles $sourceFile
          } else {
				  Get-ChildItem "$sourceFile" -Include &WILDCARD_FILE# -Recurse | Where-Object {(Split-Path $_.FullName -Parent) -eq "$sourceFile"} |  Foreach-Object {
                                   $tempPath = $_.Fullname
                                   $srcFile = Split-Path $tempPath -leaf
                                   moveFiles $tempPath
                  }
             }
         }
}

: INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
__uc_return( $errors )








! java -jar "&$AGENT_RESOURCES_CLIENT#file-system-tool.jar" file FileMove "&UC4RB_DIR_FILE_MV_SOURCE#" "&UC4RB_DIR_FILE_MV_TARGET#" "&UC4RB_DIR_FILE_MV_OVERWRITE#"



! -------End move file---------------


:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS]]></process>
      </row>
      <row>
         <pre_process>:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB</pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object>1</job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
         <backup_path>&amp;UC4RB_DIR_FILE_MV_TARGET#</backup_path>
      </row>
   </rollback_definitions>
</jobs>
